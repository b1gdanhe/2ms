{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nexport default {\n  props: [\"ed\", \"closeEditModal\"],\n  data: function data() {\n    return {\n      show: false,\n      name: this.$store.state.user.name,\n      email: this.$store.state.user.email,\n      errors_name: null,\n      errors_email: null,\n      message: null,\n      contries: this.$store.state.contries,\n      selected: \"\"\n    };\n  },\n  methods: {\n    saveProfile: function saveProfile() {\n      var _this = this;\n\n      var user_info = {\n        name: this.name,\n        email: this.email\n      };\n      var url = \"https://les2ms-api.herokuapp.com/api/userupdate/\" + this.$store.state.user.id;\n      var requestOptions = {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.$store.state.token\n        },\n        body: JSON.stringify(user_info)\n      };\n      fetch(url, requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        console.log(result);\n\n        if (result.errors) {\n          if (result.errors.name) {\n            _this.errors_name = result.errors.name[0];\n          }\n\n          if (result.errors.email) {\n            _this.errors_email = result.errors.email[0];\n          }\n        }\n\n        if (result.token) {\n          _this.message = result.message;\n          _this.show = !_this.show;\n\n          _this.$store.commit(\"getUserInfos\", result);\n\n          setTimeout(function () {\n            location.reload();\n          }, 2000);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAiCA,eAAe;AACbA,OAAK,EAAE,CAAC,IAAD,EAAO,gBAAP,CADM;AAEbC,MAFa,kBAEN;AACL,WAAO;AACLC,UAAI,EAAE,KADD;AAELC,UAAI,EAAE,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBH,IAFxB;AAGLI,WAAK,EAAE,KAAKH,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,KAHzB;AAILC,iBAAW,EAAE,IAJR;AAKLC,kBAAY,EAAE,IALT;AAMLC,aAAO,EAAE,IANJ;AAOLC,cAAQ,EAAE,KAAKP,MAAL,CAAYC,KAAZ,CAAkBM,QAPvB;AAQLC,cAAQ,EAAE;AARL,KAAP;AAUD,GAbY;AAcbC,SAAO,EAAE;AACPC,eADO,yBACO;AAAA;;AACZ,UAAIC,SAAQ,GAAI;AACdZ,YAAI,EAAE,KAAKA,IADG;AAEdI,aAAK,EAAE,KAAKA;AAFE,OAAhB;AAIA,UAAMS,GAAE,GACN,qDACA,KAAKZ,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBW,EAFzB;AAGA,UAAIC,cAAa,GAAI;AACnBC,cAAM,EAAE,KADW;AAEnBC,eAAO,EAAE;AACPC,gBAAM,EAAE,kBADD;AAEP,0BAAgB,kBAFT;AAGPC,uBAAa,EAAE,YAAY,KAAKlB,MAAL,CAAYC,KAAZ,CAAkBkB;AAHtC,SAFU;AAOnBC,YAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,SAAf;AAPa,OAArB;AASAY,WAAK,CAACX,GAAD,EAAME,cAAN,CAAL,CACGU,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAACG,MAAD,EAAY;AAChBC,eAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,YAAIA,MAAM,CAACG,MAAX,EAAmB;AACjB,cAAIH,MAAM,CAACG,MAAP,CAAc/B,IAAlB,EAAwB;AACtB,iBAAI,CAACK,WAAL,GAAmBuB,MAAM,CAACG,MAAP,CAAc/B,IAAd,CAAmB,CAAnB,CAAnB;AACF;;AACA,cAAI4B,MAAM,CAACG,MAAP,CAAc3B,KAAlB,EAAyB;AACvB,iBAAI,CAACE,YAAL,GAAoBsB,MAAM,CAACG,MAAP,CAAc3B,KAAd,CAAoB,CAApB,CAApB;AACF;AACF;;AACA,YAAIwB,MAAM,CAACR,KAAX,EAAkB;AAChB,eAAI,CAACb,OAAL,GAAeqB,MAAM,CAACrB,OAAtB;AACA,eAAI,CAACR,IAAL,GAAY,CAAC,KAAI,CAACA,IAAlB;;AACA,eAAI,CAACE,MAAL,CAAY+B,MAAZ,CAAmB,cAAnB,EAAmCJ,MAAnC;;AACAK,oBAAU,CAAC,YAAM;AACfC,oBAAQ,CAACC,MAAT;AACD,WAFS,EAEP,IAFO,CAAV;AAGF;AACD,OAtBH;AAuBD;AAzCM;AAdI,CAAf","names":["props","data","show","name","$store","state","user","email","errors_name","errors_email","message","contries","selected","methods","saveProfile","user_info","url","id","requestOptions","method","headers","Accept","Authorization","token","body","JSON","stringify","fetch","then","response","json","result","console","log","errors","commit","setTimeout","location","reload"],"sourceRoot":"","sources":["/home/bignon/Documents/2MS/projet-formation/2ms/src/components/etudiants/UpdateProfile.vue"],"sourcesContent":["<template>\n  <div class=\"editor-alert\" v-if=\"show == true\">{{ this.message }}</div>\n  <div class=\"editor-container\" v-if=\"ed\">\n    <div class=\"editor-modal\">\n      <input type=\"text \" placeholder=\"Name\" v-model=\"name\" />\n      <div v-if=\"this.errors_name\">{{ this.errors_name }}</div>\n      <!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\n      <input type=\"email\" placeholder=\"Email\" v-model=\"email\" />\n      <div v-if=\"this.errors_email\">{{ this.errors_email }}</div>\n      <!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\n      <input type=\"date\" placeholder=\"Date de naissance\" v-model=\"date\" />\n      <div v-if=\"this.errors_email\">{{ this.errors_email }}</div>\n      <!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\n      <input type=\"text\" placeholder=\"Date de naissance\" v-model=\"eglise\" />\n      <div v-if=\"this.errors_email\">{{ this.errors_email }}</div>\n      <!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\n      <select v-model=\"selected\" class=\"editor-select\">\n        <option value=\"\">Pays</option>\n        <option v-for=\"contry in contries\" :key=\"contry.id\" value=\"contry.name\">\n          {{ contry.name }}\n        </option>\n        <option value=\"\">Pays</option>\n      </select>\n      <div v-if=\"this.errors_email\">{{ this.errors_email }}</div>\n      <div class=\"editor-buttons\">\n        <button class=\"editor-go\" @click=\"saveProfile\">Enregistrer</button>\n        <button class=\"editor-cancel\" @click=\"closeEditModal\">Retourner</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"ed\", \"closeEditModal\"],\n  data() {\n    return {\n      show: false,\n      name: this.$store.state.user.name,\n      email: this.$store.state.user.email,\n      errors_name: null,\n      errors_email: null,\n      message: null,\n      contries: this.$store.state.contries,\n      selected: \"\",\n    };\n  },\n  methods: {\n    saveProfile() {\n      let user_info = {\n        name: this.name,\n        email: this.email,\n      };\n      const url =\n        \"https://les2ms-api.herokuapp.com/api/userupdate/\" +\n        this.$store.state.user.id;\n      let requestOptions = {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.$store.state.token,\n        },\n        body: JSON.stringify(user_info),\n      };\n      fetch(url, requestOptions)\n        .then((response) => {\n          return response.json();\n        })\n        .then((result) => {\n          console.log(result);\n          if (result.errors) {\n            if (result.errors.name) {\n              this.errors_name = result.errors.name[0];\n            }\n            if (result.errors.email) {\n              this.errors_email = result.errors.email[0];\n            }\n          }\n          if (result.token) {\n            this.message = result.message;\n            this.show = !this.show;\n            this.$store.commit(\"getUserInfos\", result);\n            setTimeout(() => {\n              location.reload();\n            }, 2000);\n          }\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.editor-alert {\n  position: absolute;\n  top: 5.5em;\n  right: 1em;\n  width: 17em;\n  height: 6em;\n  display: flex;\n  background-color: rgb(23, 201, 100);\n  box-shadow: 0px 5px 5px -5px black;\n  border-radius: 15px;\n  padding: 1em;\n  align-items: center;\n  gap: 1em;\n  font-weight: bold;\n  color: white;\n  transform: rotate(8deg);\n  transition: 0.5 ease-in-out;\n  z-index: 99;\n}\n.editor-container {\n  position: fixed;\n  display: flex;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.editor-modal {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 40%;\n  gap: 16px;\n  background-color: #5b3cc4;\n  padding: 5px 15px;\n  height: 18em;\n  border-radius: 15px;\n}\n.editor-modal input {\n  height: 3em;\n  border: none;\n  outline: none;\n  border-radius: 15px;\n  padding: 0px 15px;\n  cursor: pointer;\n}\n.editor-modal .editor-buttons {\n  display: flex;\n  justify-content: space-around;\n}\n.editor-modal .editor-buttons button {\n  width: 7em;\n  line-height: 0;\n  height: 2.5em;\n  border-radius: 15px;\n  border: none;\n  outline: none;\n  color: white;\n  font-weight: 700;\n  cursor: pointer;\n}\n.editor-select {\n  height: 3em;\n  border: none;\n  outline: none;\n  border-radius: 15px;\n  padding: 0px 15px;\n  cursor: pointer;\n  background-color: white;\n\n  /*  */\n  appearance: none;\n  -webkit-appearance: none;\n}\n.editor-select:focus {\n  background-color: lightgray;\n  color: black;\n}\n.editor-select option {\n  outline: none;\n  border: none;\n  width: 50em;\n  display: block;\n  color: black;\n}\n\n.editor-go {\n  background: rgb(23, 201, 100);\n}\n.editor-cancel {\n  background: rgb(242, 19, 93);\n}\n@media screen and (max-width: 780px) {\n  .editor-modal {\n    width: 80%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}