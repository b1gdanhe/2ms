{"ast":null,"code":"import { createStore } from \"vuex\";\nexport default createStore({\n  state: {\n    authenticated: false,\n    token: null,\n    user: null\n  },\n  getters: {},\n  mutations: {\n    getUserInfos: function getUserInfos(state, info) {\n      if (info.token) {\n        localStorage.setItem(\"INFO\", JSONinfo);\n        state.authenticated = true;\n        state.token = info.token;\n        state.user = info.user;\n      }\n    },\n    persistStore: function persistStore(state) {\n      if (localStorage.getItem(\"INFO\")) {\n        var info = localStorage.getItem(\"INFO\");\n        state.authenticated = true;\n        state.token = info.token;\n        state.user = info.user;\n      }\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"sources":["/home/bignon/Documents/2MS/projet-formation/2ms/src/store/index.js"],"names":["createStore","state","authenticated","token","user","getters","mutations","getUserInfos","info","localStorage","setItem","JSONinfo","persistStore","getItem","actions","modules"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,eAAeA,WAAW,CAAC;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,KADV;AAELC,IAAAA,KAAK,EAAE,IAFF;AAGLC,IAAAA,IAAI,EAAE;AAHD,GADkB;AAMzBC,EAAAA,OAAO,EAAE,EANgB;AAOzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YADS,wBACIN,KADJ,EACWO,IADX,EACiB;AACxB,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACdM,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,QAA7B;AACAV,QAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACAD,QAAAA,KAAK,CAACE,KAAN,GAAcK,IAAI,CAACL,KAAnB;AACAF,QAAAA,KAAK,CAACG,IAAN,GAAaI,IAAI,CAACJ,IAAlB;AACD;AACF,KARQ;AASTQ,IAAAA,YATS,wBASIX,KATJ,EASW;AAClB,UAAIQ,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChC,YAAIL,IAAI,GAAGC,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX;AACAZ,QAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACAD,QAAAA,KAAK,CAACE,KAAN,GAAcK,IAAI,CAACL,KAAnB;AACAF,QAAAA,KAAK,CAACG,IAAN,GAAaI,IAAI,CAACJ,IAAlB;AACD;AACF;AAhBQ,GAPc;AAyBzBU,EAAAA,OAAO,EAAE,EAzBgB;AA0BzBC,EAAAA,OAAO,EAAE;AA1BgB,CAAD,CAA1B","sourcesContent":["import { createStore } from \"vuex\";\nexport default createStore({\n  state: {\n    authenticated: false,\n    token: null,\n    user: null,\n  },\n  getters: {},\n  mutations: {\n    getUserInfos(state, info) {\n      if (info.token) {\n        localStorage.setItem(\"INFO\", JSONinfo);\n        state.authenticated = true;\n        state.token = info.token;\n        state.user = info.user;\n      }\n    },\n    persistStore(state) {\n      if (localStorage.getItem(\"INFO\")) {\n        let info = localStorage.getItem(\"INFO\");\n        state.authenticated = true;\n        state.token = info.token;\n        state.user = info.user;\n      }\n    },\n  },\n  actions: {},\n  modules: {},\n});\n"]},"metadata":{},"sourceType":"module"}